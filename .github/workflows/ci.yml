name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: testing
          MYSQL_ROOT_PASSWORD: root
        ports: ["3306:3306"]
        options: >-
          --health-cmd "mysqladmin ping -h 127.0.0.1 -proot"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, pdo_mysql, intl, gd
          coverage: none

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer deps
        run: |
          composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Node deps and build
        run: |
          npm config set registry https://registry.npmjs.org/
          npm ci
          npm run build

      - name: Prepare Laravel .env
        run: |
          cp .env.example .env
          php -r "file_exists('artisan') && print('artisan ok');"
          php artisan key:generate
          php -v

      - name: Run PHPUnit
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: testing
          DB_USERNAME: root
          DB_PASSWORD: root
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
        run: |
          php artisan test --env=testing --verbose


